{"analyze_20250530_235517": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "analyze_20250530_235733": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "analyze_20250530_235852": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250530_235912": {"status": "error", "message": "Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerDayPerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\"\n  quota_id: \"GenerateContentInputTokensPerModelPerMinute-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 19\n}\n]", "data": null}, "analyze_20250531_000130": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_000200": {"status": "error", "message": "Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerDayPerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\"\n  quota_id: \"GenerateContentInputTokensPerModelPerMinute-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 35\n}\n]", "data": null}, "analyze_20250531_000408": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_000433": {"status": "error", "message": "Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\"\n  quota_id: \"GenerateContentInputTokensPerModelPerMinute-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerDayPerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 2\n}\n]", "data": null}, "analyze_20250531_000656": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_000721": {"status": "error", "message": "Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\"\n  quota_id: \"GenerateContentInputTokensPerModelPerMinute-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerDayPerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 16\n}\n]", "data": null}, "analyze_20250531_001328": {"status": "error", "message": "404: 404 Project Not Found", "data": null}, "analyze_20250531_001516": {"status": "error", "message": "404: 404 Project Not Found", "data": null}, "analyze_20250531_001626": {"status": "error", "message": "404: 404 Project Not Found", "data": null}, "analyze_20250531_001730": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_001756": {"status": "error", "message": "Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\"\n  quota_id: \"GenerateContentInputTokensPerModelPerMinute-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerDayPerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 37\n}\n]", "data": null}, "analyze_20250531_002006": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_002108": {"status": "error", "message": "Error calling Gemini API: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\"\n  quota_id: \"GenerateContentInputTokensPerModelPerMinute-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerDayPerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 28\n}\n]", "data": null}, "analyze_20250531_002349": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_002449": {"status": "error", "message": "Error calling Gemini API: 'PipelineGenAgent' object has no attribute 'model'", "data": null}, "analyze_20250531_002525": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_002541": {"status": "error", "message": "Error calling Gemini API: 'PipelineGenAgent' object has no attribute 'model'", "data": null}, "analyze_20250531_002651": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_002705": {"status": "error", "message": "'PipelineGenAgent' object has no attribute '_call_gemini'", "data": null}, "analyze_20250531_002809": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_002823": {"status": "error", "message": "'PipelineGenAgent' object has no attribute '_call_gemini'", "data": null}, "analyze_20250531_002854": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_002908": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "analyze_20250531_003029": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_003045": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_003101": {"status": "error", "message": "Error validating pipeline: Missing attributes: content", "data": null}, "analyze_20250531_003217": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_003235": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_003303": {"status": "error", "message": "Error validating pipeline: Missing attributes: content", "data": null}, "review_20250531_003306": {"review_id": "review_20250531_003306", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_004159": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_004213": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_004229": {"status": "error", "message": "Error validating pipeline: Missing attributes: content", "data": null}, "review_20250531_004234": {"review_id": "review_20250531_004234", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_004406": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_004425": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_004440": {"status": "error", "message": "Error validating pipeline: Missing attributes: content", "data": null}, "review_20250531_004446": {"review_id": "review_20250531_004446", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_004920": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_004936": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_004952": {"status": "error", "message": "Error validating pipeline: Missing attributes: content", "data": null}, "analyze_20250531_005131": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_005146": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_005159": {"status": "error", "message": "Error validating pipeline: Missing attributes: content", "data": null}, "review_20250531_005205": {"review_id": "review_20250531_005205", "status": "error", "message": "Failed to generate code review: Failed to call Gemini API with model gemini-pro after 3 attempts: 404 models/gemini-pro is not found for API version v1beta, or is not supported for generateContent. Call ListModels to see the list of available models and their supported methods.", "findings": [], "recommendations": [], "score": 0}, "analyze_20250531_005529": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_005548": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_005603": {"status": "error", "message": "Error validating pipeline: 403: 403 Forbidden", "data": null}, "review_20250531_005610": {"review_id": "review_20250531_005610", "status": "error", "message": "Failed to generate code review: Failed to call Gemini API with model models/gemini-1.5-pro after 3 attempts: 429 You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [violations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_input_token_count\"\n  quota_id: \"GenerateContentInputTokensPerModelPerMinute-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerMinutePerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\nviolations {\n  quota_metric: \"generativelanguage.googleapis.com/generate_content_free_tier_requests\"\n  quota_id: \"GenerateRequestsPerDayPerProjectPerModel-FreeTier\"\n  quota_dimensions {\n    key: \"model\"\n    value: \"gemini-1.5-pro\"\n  }\n  quota_dimensions {\n    key: \"location\"\n    value: \"global\"\n  }\n}\n, links {\n  description: \"Learn more about Gemini API quotas\"\n  url: \"https://ai.google.dev/gemini-api/docs/rate-limits\"\n}\n, retry_delay {\n  seconds: 28\n}\n]", "findings": [], "recommendations": [], "score": 0}, "analyze_20250531_010134": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_010149": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_010205": {"status": "error", "message": "Error validating pipeline: 403: 403 Forbidden", "data": null}, "review_20250531_010211": {"review_id": "review_20250531_010211", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_010419": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_010432": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_010447": {"status": "error", "message": "Error validating pipeline: 403: 403 Forbidden", "data": null}, "review_20250531_010454": {"review_id": "review_20250531_010454", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_010727": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_010741": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_010756": {"status": "error", "message": "Error validating pipeline: Missing attributes: content", "data": null}, "review_20250531_010801": {"review_id": "review_20250531_010801", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_011011": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_011026": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_011039": {"status": "error", "message": "Error validating pipeline: 403: 403 Forbidden", "data": null}, "review_20250531_011045": {"review_id": "review_20250531_011045", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_011537": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_011551": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "validate_20250531_011609": {"status": "error", "message": "Error validating pipeline: 403: 403 Forbidden", "data": null}, "review_20250531_011615": {"review_id": "review_20250531_011615", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_015712": {"status": "error", "message": "404: 404 Project Not Found", "data": null}, "analyze_20250531_015858": {"status": "error", "message": "404: 404 Project Not Found", "data": null}, "analyze_20250531_015959": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "analyze_20250531_020114": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_020125": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "stages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t $DOCKER_IMAGE .\n    - docker push $DOCKER_IMAGE\n  only:\n    - main\n\ntest:\n  stage: test\n  image: $DOCKER_IMAGE\n  script:\n    - echo \"Running tests...\"\n    - python -m pytest tests/\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: google/cloud-sdk:latest\n  script:\n    - echo \"Deploying to Cloud Run...\"\n    - gcloud run deploy $CI_PROJECT_NAME --image $DOCKER_IMAGE --platform managed --region us-central1\n  only:\n    - main "}}, "analyze_20250531_020253": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_020302": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_020352": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_020402": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_020439": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_020450": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_020613": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_020623": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_020759": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_020808": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_020929": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_020938": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_021100": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_021109": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_021120": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_021254": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_021304": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_021313": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_021315": {"review_id": "review_20250531_021315", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_021629": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_021640": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_021649": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_021650": {"review_id": "review_20250531_021650", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_021937": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_021946": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_021957": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_021958": {"review_id": "review_20250531_021958", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_022139": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_022148": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_022155": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_022157": {"review_id": "review_20250531_022157", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_022335": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_022346": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_022355": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_022356": {"review_id": "review_20250531_022356", "status": "completed", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70}, "analyze_20250531_022644": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_022655": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_022703": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_022705": {"review_id": "review_20250531_022705", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_022931": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_022940": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_022948": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_022950": {"review_id": "review_20250531_022950", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_023112": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_023127": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_023138": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_023139": {"review_id": "review_20250531_023139", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_023406": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_023416": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_023426": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_023427": {"review_id": "review_20250531_023427", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_023503": {"status": "error", "message": "Repository not found: https://github.com/chrsnikhil/CNOS. Please check if the URL is correct and you have access to it.", "data": null}, "analyze_20250531_023537": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".cursor", ".cursor/rules", ".github", ".github/workflows", ".kamal", ".kamal/hooks", "app", "app/assets", "app/assets/builds", "app/assets/images", "app/assets/images/icons", "app/assets/images/icons/lucide", "app/assets/stylesheets", "app/assets/tailwind", "app/channels", "app/channels/application_cable", "app/components", "app/components/entries", "app/components/layouts", "app/components/mailers"], "directories": [".cursor", ".cursor/rules", ".github", ".github/workflows", ".kamal", ".kamal/hooks", "app", "app/assets", "app/assets/builds", "app/assets/images", "app/assets/images/icons", "app/assets/images/icons/lucide", "app/assets/stylesheets", "app/assets/tailwind", "app/channels", "app/channels/application_cable", "app/components", "app/components/entries", "app/components/layouts", "app/components/mailers"]}, "dependencies": {"ruby": "source \"https://rubygems.org\"\n\n# Bundle edge Rails instead: gem \"rails\", github: \"rails/rails\", branch: \"main\"\ngem \"rails\", \"~> 8.0.2\"\n# The modern asset pipeline for Rails [https://github.com/rails/propshaft]\ngem \"propshaft\"\n# Use sqlite3 as the database for Active Record\ngem \"sqlite3\", \">= 2.1\"\n# Use the Puma web server [https://github.com/puma/puma]\ngem \"puma\", \">= 5.0\"\n# Use JavaScript with ESM import maps [https://github.com/rails/importmap-rails]\ngem \"importmap-rails\"\n# Hotwire's SPA-like page accelerator [https://turbo.hotwired.dev]\ngem \"turbo-rails\"\n# Hotwire's modest JavaScript framework [https://stimulus.hotwired.dev]\ngem \"stimulus-rails\"\n# Use Tailwind CSS [https://github.com/rails/tailwindcss-rails]\ngem \"tailwindcss-rails\"\n# Build JSON APIs with ease [https://github.com/rails/jbuilder]\ngem \"jbuilder\"\n\n# Use Active Model has_secure_password [https://guides.rubyonrails.org/active_model_basics.html#securepassword]\ngem \"bcrypt\", \"~> 3.1.7\"\n\n# Windows does not include zoneinfo files, so bundle the tzinfo-data gem\ngem \"tzinfo-data\", platforms: %i[ windows jruby ]\n\n# Use the database-backed adapters for Rails.cache, Active Job, and Action Cable\ngem \"solid_cache\"\ngem \"solid_queue\"\ngem \"solid_cable\"\n\n# Reduces boot times through caching; required in config/boot.rb\ngem \"bootsnap\", require: false\n\n# Deploy this application anywhere as a Docker container [https://kamal-deploy.org]\ngem \"kamal\", require: false\n\n# Add HTTP asset caching/compression and X-Sendfile acceleration to Puma [https://github.com/basecamp/thruster/]\ngem \"thruster\", require: false\n\n# Use Active Storage variants [https://guides.rubyonrails.org/active_storage_overview.html#transforming-images]\ngem \"image_processing\", \"~> 1.2\"\n\ngroup :development, :test do\n  # See https://guides.rubyonrails.org/debugging_rails_applications.html#debugging-with-the-debug-gem\n  gem \"debug\", platforms: %i[ mri windows ], require: \"debug/prelude\"\n\n  # Static analysis for security vulnerabilities [https://brakemanscanner.org/]\n  gem \"brakeman\", require: false\n\n  # Omakase Ruby styling [https://github.com/rails/rubocop-rails-omakase/]\n  gem \"rubocop-rails-omakase\", require: false\n\n  gem \"dotenv-rails\", \"~> 3.1\", \">= 3.1.8\"\n\n  gem \"faker\", \"~> 3.5\", \">= 3.5.1\"\nend\n\ngroup :development do\n  # Use console on exceptions pages [https://github.com/rails/web-console]\n  gem \"web-console\"\n\n  gem \"letter_opener\", \"~> 1.10\"\n\n  gem \"hotwire-spark\", \"~> 0.1.13\"\nend\n\ngem \"ruby_ui\", \"~> 1.0\", group: :development, require: false\n\ngem \"phlex-rails\", \"~> 2.2\"\n\ngem \"tailwind_merge\", \"~> 1.1\"\n\ngem \"pagy\", \"~> 9.3\"\n"}, "analysis": {"language": "ruby", "has_dockerfile": false, "has_tests": false, "build_steps": ["install dependencies", "build gem"], "test_steps": [], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_023547": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_023556": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_023556": {"review_id": "review_20250531_023556", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_023646": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".github", ".github/ISSUE_TEMPLATE", ".github/FUNDING.yml", ".github/ISSUE_TEMPLATE/report-domain.md", "127.txt", "LICENSE", "README.md", "_headers", "_redirects", "clash.yaml", "list.txt", "pihole.txt", "winhosts.txt"], "directories": [".github", ".github/ISSUE_TEMPLATE"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": false, "build_steps": ["install dependencies", "build"], "test_steps": [], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_023654": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_023703": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_023704": {"review_id": "review_20250531_023704", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_024003": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_024014": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_024023": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_024024": {"review_id": "review_20250531_024024", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_024208": {"status": "error", "message": "Repository not found: https://gitlab.com/gitlab-samples/docker. Please check if the URL is correct and you have access to it.", "data": null}, "analyze_20250531_024213": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_024225": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_024234": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_024235": {"review_id": "review_20250531_024235", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_024415": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_024426": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_024438": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_024439": {"review_id": "review_20250531_024439", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_112257": {"status": "error", "message": "Error analyzing repository structure: 404: 404 Tree Not Found", "data": null}, "analyze_20250531_112407": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_112418": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_112427": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_112428": {"review_id": "review_20250531_112428", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_112644": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_112656": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_112704": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_112705": {"review_id": "review_20250531_112705", "status": "completed", "message": "Code review completed using mock logic", "findings": [{"type": "best_practice", "severity": "medium", "description": "No tests found. Add unit or integration tests for better code quality.", "location": "N/A", "recommendation": "Implement tests for your codebase."}], "recommendations": ["Implement tests for your codebase."], "score": 70, "summary": "Mock code review summary based on basic analysis."}, "analyze_20250531_112913": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_112924": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_112933": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_112935": {"review_id": "review_20250531_112935", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_113327": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": ["LICENSE", "README.md"], "directories": []}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": false, "build_steps": ["install dependencies", "build"], "test_steps": [], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_113339": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_113347": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_113744": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_113755": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_113802": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_113804": {"review_id": "review_20250531_113804", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_114237": {"status": "error", "message": "Error analyzing repository structure: 404: 404 Tree Not Found", "data": null}, "analyze_20250531_114253": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".idea", "src", "src/test", "src/test/java", "src/test/java/runners", "src/test/java/stepdefinitions", "src/test/java/utils", "src/test/resources", "src/test/resources/docs", "src/test/resources/features", ".gitignore", ".gitlab-ci.yml", ".idea/.gitignore", ".idea/encodings.xml", ".idea/misc.xml", ".idea/vcs.xml", "README.md", "pom.xml", "src/test/java/runners/TestRunner.java", "src/test/java/stepdefinitions/StepDefinitions.java"], "directories": [".idea", "src", "src/test", "src/test/java", "src/test/java/runners", "src/test/java/stepdefinitions", "src/test/java/utils", "src/test/resources", "src/test/resources/docs", "src/test/resources/features"]}, "dependencies": {"java": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.lukaszkobylanski</groupId>\n    <artifactId>restassured-bdd</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <properties>\n        <maven.compiler.source>17</maven.compiler.source>\n        <maven.compiler.target>17</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n\n    <dependencies>\n        <!-- REST Assured -->\n        <dependency>\n            <groupId>io.rest-assured</groupId>\n            <artifactId>rest-assured</artifactId>\n            <version>5.4.0</version>\n            <scope>test</scope>\n        </dependency>\n\n        <!-- Cucumber -->\n        <dependency>\n            <groupId>io.cucumber</groupId>\n            <artifactId>cucumber-java</artifactId>\n            <version>7.16.1</version>\n        </dependency>\n\n        <dependency>\n            <groupId>io.cucumber</groupId>\n            <artifactId>cucumber-junit</artifactId>\n            <version>7.16.1</version>\n        </dependency>\n\n        <!-- JUnit -->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.13.2</version>\n            <scope>test</scope>\n        </dependency>\n\n        <!-- JSONPath + Hamcrest (REST Assured utils) -->\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest</artifactId>\n            <version>2.2</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n            <version>2.15.2</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>3.2.5</version>\n            </plugin>\n\n            <plugin>\n                <groupId>net.masterthought</groupId>\n                <artifactId>maven-cucumber-reporting</artifactId>\n                <version>5.7.0</version>\n                <executions>\n                    <execution>\n                        <id>execution</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>generate</goal>\n                        </goals>\n                        <configuration>\n                            <projectName>RESTAssured BDD Tests</projectName>\n                            <outputDirectory>target/cucumber-report</outputDirectory>\n                            <jsonFiles>\n                                <param>target/cucumber.json</param>\n                            </jsonFiles>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>"}, "analysis": {"language": "java", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "compile", "package"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_114303": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_114310": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_115111": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_115123": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_115132": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_115133": {"review_id": "review_20250531_115133", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_120014": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_120024": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_120033": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_120034": {"review_id": "review_20250531_120034", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_131728": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_131738": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_131747": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_131748": {"review_id": "review_20250531_131748", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_133409": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_133421": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_133431": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_133432": {"review_id": "review_20250531_133432", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_133452": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_133504": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_133513": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_133514": {"review_id": "review_20250531_133514", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_134025": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_134037": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_134048": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_134049": {"review_id": "review_20250531_134049", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_134507": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_134518": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_134527": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_134529": {"review_id": "review_20250531_134529", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_134755": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_134804": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_134812": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_134813": {"review_id": "review_20250531_134813", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_135010": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_135020": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_135028": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_135030": {"review_id": "review_20250531_135030", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_135313": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_135322": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "analyze_20250531_135332": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "validate_20250531_135341": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "generate_20250531_135343": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_135353": {"review_id": "review_20250531_135353", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "validate_20250531_135403": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_135404": {"review_id": "review_20250531_135404", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_135653": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_135702": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_135712": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_135713": {"review_id": "review_20250531_135713", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_135922": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_135930": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_135939": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_135941": {"review_id": "review_20250531_135941", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_140103": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_140113": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_140121": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_140124": {"review_id": "review_20250531_140124", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_140630": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_140638": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_140647": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_140648": {"review_id": "review_20250531_140648", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}, "analyze_20250531_144323": {"status": "success", "message": "Repository analysis completed", "data": {"structure": {"files": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"], "directories": [".gitlab", ".gitlab/ci", ".gitlab/issue_templates", ".gitlab/merge_request_templates", ".vscode", "apps", "apps/gitlab-runner-helper", "cache", "cache/azure", "cache/gcs", "cache/gcsv2", "cache/s3", "cache/s3v2", "cache/test", "certs", "ci", "commands", "commands/fleeting", "commands/helpers", "commands/helpers/archive"]}, "dependencies": {}, "analysis": {"language": "unknown", "has_dockerfile": false, "has_tests": true, "build_steps": ["install dependencies", "build"], "test_steps": ["run tests"], "deploy_steps": ["deploy to Cloud Run"]}}}, "generate_20250531_144332": {"status": "success", "message": "Pipeline generation completed", "data": {"pipeline_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "validate_20250531_144341": {"status": "success", "message": "Pipeline validation completed", "data": {"valid": true, "errors": [], "warnings": [], "merged_yaml": "\nstages:\n  - build\n  - test\n  - deploy\n\nvariables:\n  DOCKER_DRIVER: overlay2\n\nbuild:\n  stage: build\n  image: alpine:latest\n  script:\n    - echo \"Building application...\"\n    - echo 'No build commands defined'\n  artifacts:\n    paths:\n      - build/\n    expire_in: 1 week\n\ntest:\n  stage: test\n  image: alpine:latest\n  script:\n    - echo \"Running tests...\"\n    - echo 'No test commands defined'\n  dependencies:\n    - build\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying application...\"\n    - echo \"Deployment completed successfully\"\n  only:\n    - main\n"}}, "review_20250531_144343": {"review_id": "review_20250531_144343", "status": "completed", "message": "Code review completed", "findings": [], "recommendations": [], "score": 0, "summary": "No significant issues found in the reviewed files."}}